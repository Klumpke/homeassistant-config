- alias: Set droger active when power detected
  initial_state: 'true'
  trigger:
    - platform: numeric_state
      entity_id: sensor.fib_fgwpf102_droger_power
      above: 10
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: input_select.dryer_status
        state: Idle
      - condition: state
        entity_id: input_select.dryer_status
        state: Dry
      - condition: state
        entity_id: input_select.dryer_status
        state: Finishing
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.dryer_status
        option: Running


# When the power drops, move the state of the droger to 
# Finishing.
- alias: Set droger finished when power drops
  initial_state: 'true'
  trigger:
    - platform: numeric_state
      entity_id: sensor.fib_fgwpf102_droger_power
      below: 6
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_select.dryer_status
        state: Running
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.dryer_status
        option: Finishing


- alias: Set droger Dry after timeout
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: input_select.dryer_status
      to: Finishing
      for:
        minutes: 2
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_select.dryer_status
        state: Finishing
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.dryer_status
        option: Dry


# When the power drops and the dryer is Dry or Finishing, someone has
# turned the dryer off and emptied it. We should do this when the state
# of the dryer is Dry or Finishing, just incase someone opens the
# dryer before the 8 minute timeout has been reached.
 
- alias: Set dryer to Idle when power off manualy
  initial_state: 'true'
  trigger:
    - platform: numeric_state
      entity_id: sensor.fib_fgwpf102_droger_power
      below: 0.4
  condition:
    condition: and
    conditions:
      - condition: numeric_state
        entity_id: sensor.fib_fgwpf102_wasmachine_power
        below: 0.4
      - condition: or
        conditions:
        - condition: state
          entity_id: input_select.dryer_status
          state: Dry
        - condition: state
          entity_id: input_select.dryer_status
          state: Finishing
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.dryer_status
        option: Idle


- alias: Set droger to POWER OFF when turned OFF
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: switch.fib_fgwpf102_droger
      to: 'off'
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.dryer_status
        option: Power OFF


- alias: Set droger idle when turned on
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: switch.fib_fgwpf102_droger
      to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_select.dryer_status
        state: Power OFF
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.dryer_status
        option: Idle


# Droger Gereed Notificatie
- alias: Send alert when droger is finished
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: sensor.dryer_status
      to: Dry
      for:
        minutes: 1
#    - platform: state
#      entity_id: person.jeroen
#      to: 'home'
#      for:
#        minutes: 3
#    - platform: state
#      entity_id: person.joyce
#      to: 'home'
#      for:
#        minutes: 3
  condition:
    condition: and
    conditions:
      - condition: time
        before: '01:30:00'
        after: '08:00:00'
#      - condition: state
#        entity_id: group.device_status
#        state: 'home'
      - condition: state
        entity_id: input_select.dryer_status
        state: Dry
#      - condition: template
#        value_template: >
#          {% if states.automation.send_alert_when_dryer_is_finished.last_triggered is not none %}
#            {% if as_timestamp(now()) | int   -  as_timestamp(states.automation.send_alert_when_dryer_is_finished.attributes.last_triggered) | int > 1800 %} true {% else %} false
#            {% endif %}
#          {% else %}
#          false
#          {% endif %}
  action:
    - service: notify.ios_notifier
  #  - service_template: >
  #      {% if (is_state('person.jeroen', 'home')) and (is_state('person.joyce', 'home'))  %}
  #        notify.ios_notifier
  #      {% elif is_state('person.jeroen', 'home') %}
  #        notify.ios_ios_jeroen
  #      {% elif is_state('person.joyce', 'home') %}
  #        notify.ios_ios_joyce
  #      {% endif %}
      data:
        message: 'De droger heeft zijn programma voltooid en kan leeggemaakt worden.'
        title: 'Droger'
        data:
          push:
            badge: 0
            sound: default
            category: "droger_alert" 